/*
 * Colectica Repository REST API
 * Colectica Repository REST API
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.IdentifierInRequest;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;

/**
 * GraphSearchRequest
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-08-17T15:59:17.406-05:00")
public class GraphSearchRequest {
  @SerializedName("ItemTypes")
  private List<UUID> itemTypes = null;

  @SerializedName("TargetItem")
  private IdentifierInRequest targetItem = null;

  @SerializedName("UseDistinctResultItem")
  private Boolean useDistinctResultItem = null;

  @SerializedName("UseDistinctTargetItem")
  private Boolean useDistinctTargetItem = null;

  public GraphSearchRequest itemTypes(List<UUID> itemTypes) {
    this.itemTypes = itemTypes;
    return this;
  }

  public GraphSearchRequest addItemTypesItem(UUID itemTypesItem) {
    if (this.itemTypes == null) {
      this.itemTypes = new ArrayList<UUID>();
    }
    this.itemTypes.add(itemTypesItem);
    return this;
  }

   /**
   * Get itemTypes
   * @return itemTypes
  **/
  @ApiModelProperty(value = "")
  public List<UUID> getItemTypes() {
    return itemTypes;
  }

  public void setItemTypes(List<UUID> itemTypes) {
    this.itemTypes = itemTypes;
  }

  public GraphSearchRequest targetItem(IdentifierInRequest targetItem) {
    this.targetItem = targetItem;
    return this;
  }

   /**
   * Get targetItem
   * @return targetItem
  **/
  @ApiModelProperty(value = "")
  public IdentifierInRequest getTargetItem() {
    return targetItem;
  }

  public void setTargetItem(IdentifierInRequest targetItem) {
    this.targetItem = targetItem;
  }

  public GraphSearchRequest useDistinctResultItem(Boolean useDistinctResultItem) {
    this.useDistinctResultItem = useDistinctResultItem;
    return this;
  }

   /**
   * Get useDistinctResultItem
   * @return useDistinctResultItem
  **/
  @ApiModelProperty(value = "")
  public Boolean getUseDistinctResultItem() {
    return useDistinctResultItem;
  }

  public void setUseDistinctResultItem(Boolean useDistinctResultItem) {
    this.useDistinctResultItem = useDistinctResultItem;
  }

  public GraphSearchRequest useDistinctTargetItem(Boolean useDistinctTargetItem) {
    this.useDistinctTargetItem = useDistinctTargetItem;
    return this;
  }

   /**
   * Get useDistinctTargetItem
   * @return useDistinctTargetItem
  **/
  @ApiModelProperty(value = "")
  public Boolean getUseDistinctTargetItem() {
    return useDistinctTargetItem;
  }

  public void setUseDistinctTargetItem(Boolean useDistinctTargetItem) {
    this.useDistinctTargetItem = useDistinctTargetItem;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GraphSearchRequest graphSearchRequest = (GraphSearchRequest) o;
    return Objects.equals(this.itemTypes, graphSearchRequest.itemTypes) &&
        Objects.equals(this.targetItem, graphSearchRequest.targetItem) &&
        Objects.equals(this.useDistinctResultItem, graphSearchRequest.useDistinctResultItem) &&
        Objects.equals(this.useDistinctTargetItem, graphSearchRequest.useDistinctTargetItem);
  }

  @Override
  public int hashCode() {
    return Objects.hash(itemTypes, targetItem, useDistinctResultItem, useDistinctTargetItem);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GraphSearchRequest {\n");
    
    sb.append("    itemTypes: ").append(toIndentedString(itemTypes)).append("\n");
    sb.append("    targetItem: ").append(toIndentedString(targetItem)).append("\n");
    sb.append("    useDistinctResultItem: ").append(toIndentedString(useDistinctResultItem)).append("\n");
    sb.append("    useDistinctTargetItem: ").append(toIndentedString(useDistinctTargetItem)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

