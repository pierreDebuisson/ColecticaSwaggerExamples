/*
 * Colectica Repository REST API
 * Colectica Repository REST API
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.IdentifierTriple;
import java.io.IOException;
import java.util.UUID;

/**
 * TypedIdTriple
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-08-17T15:59:17.406-05:00")
public class TypedIdTriple {
  @SerializedName("Item1")
  private IdentifierTriple item1 = null;

  @SerializedName("Item2")
  private UUID item2 = null;

  public TypedIdTriple item1(IdentifierTriple item1) {
    this.item1 = item1;
    return this;
  }

   /**
   * Get item1
   * @return item1
  **/
  @ApiModelProperty(value = "")
  public IdentifierTriple getItem1() {
    return item1;
  }

  public void setItem1(IdentifierTriple item1) {
    this.item1 = item1;
  }

   /**
   * Get item2
   * @return item2
  **/
  @ApiModelProperty(value = "")
  public UUID getItem2() {
    return item2;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TypedIdTriple typedIdTriple = (TypedIdTriple) o;
    return Objects.equals(this.item1, typedIdTriple.item1) &&
        Objects.equals(this.item2, typedIdTriple.item2);
  }

  @Override
  public int hashCode() {
    return Objects.hash(item1, item2);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TypedIdTriple {\n");
    
    sb.append("    item1: ").append(toIndentedString(item1)).append("\n");
    sb.append("    item2: ").append(toIndentedString(item2)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

