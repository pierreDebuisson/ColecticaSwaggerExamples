/*
 * Colectica Repository REST API
 * Colectica Repository REST API
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.CodeValue;
import io.swagger.client.model.InternationalIdentifier;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.joda.time.DateTime;

/**
 * DublinCore
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-08-17T15:59:17.406-05:00")
public class DublinCore {
  @SerializedName("AlternateTitle")
  private Map<String, String> alternateTitle = null;

  @SerializedName("Contributor")
  private Map<String, String> contributor = null;

  @SerializedName("Coverage")
  private Map<String, String> coverage = null;

  @SerializedName("Creator")
  private Map<String, String> creator = null;

  @SerializedName("Date")
  private DateTime date = null;

  @SerializedName("Description")
  private Map<String, String> description = null;

  @SerializedName("Format")
  private Map<String, String> format = null;

  @SerializedName("Identifiers")
  private List<InternationalIdentifier> identifiers = null;

  @SerializedName("Languages")
  private List<CodeValue> languages = null;

  @SerializedName("Publisher")
  private Map<String, String> publisher = null;

  @SerializedName("Relation")
  private Map<String, String> relation = null;

  @SerializedName("Rights")
  private Map<String, String> rights = null;

  @SerializedName("Source")
  private Map<String, String> source = null;

  @SerializedName("Subject")
  private Map<String, String> subject = null;

  @SerializedName("SubTitle")
  private Map<String, String> subTitle = null;

  @SerializedName("Title")
  private Map<String, String> title = null;

  @SerializedName("Type")
  private Map<String, String> type = null;

  public DublinCore alternateTitle(Map<String, String> alternateTitle) {
    this.alternateTitle = alternateTitle;
    return this;
  }

  public DublinCore putAlternateTitleItem(String key, String alternateTitleItem) {
    if (this.alternateTitle == null) {
      this.alternateTitle = new HashMap<String, String>();
    }
    this.alternateTitle.put(key, alternateTitleItem);
    return this;
  }

   /**
   * Get alternateTitle
   * @return alternateTitle
  **/
  @ApiModelProperty(value = "")
  public Map<String, String> getAlternateTitle() {
    return alternateTitle;
  }

  public void setAlternateTitle(Map<String, String> alternateTitle) {
    this.alternateTitle = alternateTitle;
  }

  public DublinCore contributor(Map<String, String> contributor) {
    this.contributor = contributor;
    return this;
  }

  public DublinCore putContributorItem(String key, String contributorItem) {
    if (this.contributor == null) {
      this.contributor = new HashMap<String, String>();
    }
    this.contributor.put(key, contributorItem);
    return this;
  }

   /**
   * Get contributor
   * @return contributor
  **/
  @ApiModelProperty(value = "")
  public Map<String, String> getContributor() {
    return contributor;
  }

  public void setContributor(Map<String, String> contributor) {
    this.contributor = contributor;
  }

  public DublinCore coverage(Map<String, String> coverage) {
    this.coverage = coverage;
    return this;
  }

  public DublinCore putCoverageItem(String key, String coverageItem) {
    if (this.coverage == null) {
      this.coverage = new HashMap<String, String>();
    }
    this.coverage.put(key, coverageItem);
    return this;
  }

   /**
   * Get coverage
   * @return coverage
  **/
  @ApiModelProperty(value = "")
  public Map<String, String> getCoverage() {
    return coverage;
  }

  public void setCoverage(Map<String, String> coverage) {
    this.coverage = coverage;
  }

  public DublinCore creator(Map<String, String> creator) {
    this.creator = creator;
    return this;
  }

  public DublinCore putCreatorItem(String key, String creatorItem) {
    if (this.creator == null) {
      this.creator = new HashMap<String, String>();
    }
    this.creator.put(key, creatorItem);
    return this;
  }

   /**
   * Get creator
   * @return creator
  **/
  @ApiModelProperty(value = "")
  public Map<String, String> getCreator() {
    return creator;
  }

  public void setCreator(Map<String, String> creator) {
    this.creator = creator;
  }

  public DublinCore date(DateTime date) {
    this.date = date;
    return this;
  }

   /**
   * Get date
   * @return date
  **/
  @ApiModelProperty(value = "")
  public DateTime getDate() {
    return date;
  }

  public void setDate(DateTime date) {
    this.date = date;
  }

  public DublinCore description(Map<String, String> description) {
    this.description = description;
    return this;
  }

  public DublinCore putDescriptionItem(String key, String descriptionItem) {
    if (this.description == null) {
      this.description = new HashMap<String, String>();
    }
    this.description.put(key, descriptionItem);
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(value = "")
  public Map<String, String> getDescription() {
    return description;
  }

  public void setDescription(Map<String, String> description) {
    this.description = description;
  }

  public DublinCore format(Map<String, String> format) {
    this.format = format;
    return this;
  }

  public DublinCore putFormatItem(String key, String formatItem) {
    if (this.format == null) {
      this.format = new HashMap<String, String>();
    }
    this.format.put(key, formatItem);
    return this;
  }

   /**
   * Get format
   * @return format
  **/
  @ApiModelProperty(value = "")
  public Map<String, String> getFormat() {
    return format;
  }

  public void setFormat(Map<String, String> format) {
    this.format = format;
  }

  public DublinCore identifiers(List<InternationalIdentifier> identifiers) {
    this.identifiers = identifiers;
    return this;
  }

  public DublinCore addIdentifiersItem(InternationalIdentifier identifiersItem) {
    if (this.identifiers == null) {
      this.identifiers = new ArrayList<InternationalIdentifier>();
    }
    this.identifiers.add(identifiersItem);
    return this;
  }

   /**
   * Get identifiers
   * @return identifiers
  **/
  @ApiModelProperty(value = "")
  public List<InternationalIdentifier> getIdentifiers() {
    return identifiers;
  }

  public void setIdentifiers(List<InternationalIdentifier> identifiers) {
    this.identifiers = identifiers;
  }

  public DublinCore languages(List<CodeValue> languages) {
    this.languages = languages;
    return this;
  }

  public DublinCore addLanguagesItem(CodeValue languagesItem) {
    if (this.languages == null) {
      this.languages = new ArrayList<CodeValue>();
    }
    this.languages.add(languagesItem);
    return this;
  }

   /**
   * Get languages
   * @return languages
  **/
  @ApiModelProperty(value = "")
  public List<CodeValue> getLanguages() {
    return languages;
  }

  public void setLanguages(List<CodeValue> languages) {
    this.languages = languages;
  }

  public DublinCore publisher(Map<String, String> publisher) {
    this.publisher = publisher;
    return this;
  }

  public DublinCore putPublisherItem(String key, String publisherItem) {
    if (this.publisher == null) {
      this.publisher = new HashMap<String, String>();
    }
    this.publisher.put(key, publisherItem);
    return this;
  }

   /**
   * Get publisher
   * @return publisher
  **/
  @ApiModelProperty(value = "")
  public Map<String, String> getPublisher() {
    return publisher;
  }

  public void setPublisher(Map<String, String> publisher) {
    this.publisher = publisher;
  }

  public DublinCore relation(Map<String, String> relation) {
    this.relation = relation;
    return this;
  }

  public DublinCore putRelationItem(String key, String relationItem) {
    if (this.relation == null) {
      this.relation = new HashMap<String, String>();
    }
    this.relation.put(key, relationItem);
    return this;
  }

   /**
   * Get relation
   * @return relation
  **/
  @ApiModelProperty(value = "")
  public Map<String, String> getRelation() {
    return relation;
  }

  public void setRelation(Map<String, String> relation) {
    this.relation = relation;
  }

  public DublinCore rights(Map<String, String> rights) {
    this.rights = rights;
    return this;
  }

  public DublinCore putRightsItem(String key, String rightsItem) {
    if (this.rights == null) {
      this.rights = new HashMap<String, String>();
    }
    this.rights.put(key, rightsItem);
    return this;
  }

   /**
   * Get rights
   * @return rights
  **/
  @ApiModelProperty(value = "")
  public Map<String, String> getRights() {
    return rights;
  }

  public void setRights(Map<String, String> rights) {
    this.rights = rights;
  }

  public DublinCore source(Map<String, String> source) {
    this.source = source;
    return this;
  }

  public DublinCore putSourceItem(String key, String sourceItem) {
    if (this.source == null) {
      this.source = new HashMap<String, String>();
    }
    this.source.put(key, sourceItem);
    return this;
  }

   /**
   * Get source
   * @return source
  **/
  @ApiModelProperty(value = "")
  public Map<String, String> getSource() {
    return source;
  }

  public void setSource(Map<String, String> source) {
    this.source = source;
  }

  public DublinCore subject(Map<String, String> subject) {
    this.subject = subject;
    return this;
  }

  public DublinCore putSubjectItem(String key, String subjectItem) {
    if (this.subject == null) {
      this.subject = new HashMap<String, String>();
    }
    this.subject.put(key, subjectItem);
    return this;
  }

   /**
   * Get subject
   * @return subject
  **/
  @ApiModelProperty(value = "")
  public Map<String, String> getSubject() {
    return subject;
  }

  public void setSubject(Map<String, String> subject) {
    this.subject = subject;
  }

  public DublinCore subTitle(Map<String, String> subTitle) {
    this.subTitle = subTitle;
    return this;
  }

  public DublinCore putSubTitleItem(String key, String subTitleItem) {
    if (this.subTitle == null) {
      this.subTitle = new HashMap<String, String>();
    }
    this.subTitle.put(key, subTitleItem);
    return this;
  }

   /**
   * Get subTitle
   * @return subTitle
  **/
  @ApiModelProperty(value = "")
  public Map<String, String> getSubTitle() {
    return subTitle;
  }

  public void setSubTitle(Map<String, String> subTitle) {
    this.subTitle = subTitle;
  }

  public DublinCore title(Map<String, String> title) {
    this.title = title;
    return this;
  }

  public DublinCore putTitleItem(String key, String titleItem) {
    if (this.title == null) {
      this.title = new HashMap<String, String>();
    }
    this.title.put(key, titleItem);
    return this;
  }

   /**
   * Get title
   * @return title
  **/
  @ApiModelProperty(value = "")
  public Map<String, String> getTitle() {
    return title;
  }

  public void setTitle(Map<String, String> title) {
    this.title = title;
  }

  public DublinCore type(Map<String, String> type) {
    this.type = type;
    return this;
  }

  public DublinCore putTypeItem(String key, String typeItem) {
    if (this.type == null) {
      this.type = new HashMap<String, String>();
    }
    this.type.put(key, typeItem);
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(value = "")
  public Map<String, String> getType() {
    return type;
  }

  public void setType(Map<String, String> type) {
    this.type = type;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DublinCore dublinCore = (DublinCore) o;
    return Objects.equals(this.alternateTitle, dublinCore.alternateTitle) &&
        Objects.equals(this.contributor, dublinCore.contributor) &&
        Objects.equals(this.coverage, dublinCore.coverage) &&
        Objects.equals(this.creator, dublinCore.creator) &&
        Objects.equals(this.date, dublinCore.date) &&
        Objects.equals(this.description, dublinCore.description) &&
        Objects.equals(this.format, dublinCore.format) &&
        Objects.equals(this.identifiers, dublinCore.identifiers) &&
        Objects.equals(this.languages, dublinCore.languages) &&
        Objects.equals(this.publisher, dublinCore.publisher) &&
        Objects.equals(this.relation, dublinCore.relation) &&
        Objects.equals(this.rights, dublinCore.rights) &&
        Objects.equals(this.source, dublinCore.source) &&
        Objects.equals(this.subject, dublinCore.subject) &&
        Objects.equals(this.subTitle, dublinCore.subTitle) &&
        Objects.equals(this.title, dublinCore.title) &&
        Objects.equals(this.type, dublinCore.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(alternateTitle, contributor, coverage, creator, date, description, format, identifiers, languages, publisher, relation, rights, source, subject, subTitle, title, type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DublinCore {\n");
    
    sb.append("    alternateTitle: ").append(toIndentedString(alternateTitle)).append("\n");
    sb.append("    contributor: ").append(toIndentedString(contributor)).append("\n");
    sb.append("    coverage: ").append(toIndentedString(coverage)).append("\n");
    sb.append("    creator: ").append(toIndentedString(creator)).append("\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    format: ").append(toIndentedString(format)).append("\n");
    sb.append("    identifiers: ").append(toIndentedString(identifiers)).append("\n");
    sb.append("    languages: ").append(toIndentedString(languages)).append("\n");
    sb.append("    publisher: ").append(toIndentedString(publisher)).append("\n");
    sb.append("    relation: ").append(toIndentedString(relation)).append("\n");
    sb.append("    rights: ").append(toIndentedString(rights)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("    subject: ").append(toIndentedString(subject)).append("\n");
    sb.append("    subTitle: ").append(toIndentedString(subTitle)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

