/*
 * Colectica Repository REST API
 * Colectica Repository REST API
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.DublinCore;
import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * RepositoryInfo
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-08-17T15:59:17.406-05:00")
public class RepositoryInfo {
  @SerializedName("Citation")
  private DublinCore citation = null;

  @SerializedName("Repositories")
  private Map<String, String> repositories = null;

  @SerializedName("CanRead")
  private Boolean canRead = null;

  @SerializedName("CanAdministrator")
  private Boolean canAdministrator = null;

  @SerializedName("CanWrite")
  private Boolean canWrite = null;

  public RepositoryInfo citation(DublinCore citation) {
    this.citation = citation;
    return this;
  }

   /**
   * Get citation
   * @return citation
  **/
  @ApiModelProperty(value = "")
  public DublinCore getCitation() {
    return citation;
  }

  public void setCitation(DublinCore citation) {
    this.citation = citation;
  }

  public RepositoryInfo repositories(Map<String, String> repositories) {
    this.repositories = repositories;
    return this;
  }

  public RepositoryInfo putRepositoriesItem(String key, String repositoriesItem) {
    if (this.repositories == null) {
      this.repositories = new HashMap<String, String>();
    }
    this.repositories.put(key, repositoriesItem);
    return this;
  }

   /**
   * Get repositories
   * @return repositories
  **/
  @ApiModelProperty(value = "")
  public Map<String, String> getRepositories() {
    return repositories;
  }

  public void setRepositories(Map<String, String> repositories) {
    this.repositories = repositories;
  }

  public RepositoryInfo canRead(Boolean canRead) {
    this.canRead = canRead;
    return this;
  }

   /**
   * Get canRead
   * @return canRead
  **/
  @ApiModelProperty(value = "")
  public Boolean getCanRead() {
    return canRead;
  }

  public void setCanRead(Boolean canRead) {
    this.canRead = canRead;
  }

  public RepositoryInfo canAdministrator(Boolean canAdministrator) {
    this.canAdministrator = canAdministrator;
    return this;
  }

   /**
   * Get canAdministrator
   * @return canAdministrator
  **/
  @ApiModelProperty(value = "")
  public Boolean getCanAdministrator() {
    return canAdministrator;
  }

  public void setCanAdministrator(Boolean canAdministrator) {
    this.canAdministrator = canAdministrator;
  }

  public RepositoryInfo canWrite(Boolean canWrite) {
    this.canWrite = canWrite;
    return this;
  }

   /**
   * Get canWrite
   * @return canWrite
  **/
  @ApiModelProperty(value = "")
  public Boolean getCanWrite() {
    return canWrite;
  }

  public void setCanWrite(Boolean canWrite) {
    this.canWrite = canWrite;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RepositoryInfo repositoryInfo = (RepositoryInfo) o;
    return Objects.equals(this.citation, repositoryInfo.citation) &&
        Objects.equals(this.repositories, repositoryInfo.repositories) &&
        Objects.equals(this.canRead, repositoryInfo.canRead) &&
        Objects.equals(this.canAdministrator, repositoryInfo.canAdministrator) &&
        Objects.equals(this.canWrite, repositoryInfo.canWrite);
  }

  @Override
  public int hashCode() {
    return Objects.hash(citation, repositories, canRead, canAdministrator, canWrite);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RepositoryInfo {\n");
    
    sb.append("    citation: ").append(toIndentedString(citation)).append("\n");
    sb.append("    repositories: ").append(toIndentedString(repositories)).append("\n");
    sb.append("    canRead: ").append(toIndentedString(canRead)).append("\n");
    sb.append("    canAdministrator: ").append(toIndentedString(canAdministrator)).append("\n");
    sb.append("    canWrite: ").append(toIndentedString(canWrite)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

