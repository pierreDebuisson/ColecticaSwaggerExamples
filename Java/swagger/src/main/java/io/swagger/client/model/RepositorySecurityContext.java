/*
 * Colectica Repository REST API
 * Colectica Repository REST API
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.ItemPermission;
import io.swagger.client.model.ItemTypePermission;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * RepositorySecurityContext
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-08-17T15:59:17.406-05:00")
public class RepositorySecurityContext {
  @SerializedName("IdentifierPermissions")
  private List<ItemPermission> identifierPermissions = null;

  @SerializedName("TypePermissions")
  private List<ItemTypePermission> typePermissions = null;

  public RepositorySecurityContext identifierPermissions(List<ItemPermission> identifierPermissions) {
    this.identifierPermissions = identifierPermissions;
    return this;
  }

  public RepositorySecurityContext addIdentifierPermissionsItem(ItemPermission identifierPermissionsItem) {
    if (this.identifierPermissions == null) {
      this.identifierPermissions = new ArrayList<ItemPermission>();
    }
    this.identifierPermissions.add(identifierPermissionsItem);
    return this;
  }

   /**
   * Get identifierPermissions
   * @return identifierPermissions
  **/
  @ApiModelProperty(value = "")
  public List<ItemPermission> getIdentifierPermissions() {
    return identifierPermissions;
  }

  public void setIdentifierPermissions(List<ItemPermission> identifierPermissions) {
    this.identifierPermissions = identifierPermissions;
  }

  public RepositorySecurityContext typePermissions(List<ItemTypePermission> typePermissions) {
    this.typePermissions = typePermissions;
    return this;
  }

  public RepositorySecurityContext addTypePermissionsItem(ItemTypePermission typePermissionsItem) {
    if (this.typePermissions == null) {
      this.typePermissions = new ArrayList<ItemTypePermission>();
    }
    this.typePermissions.add(typePermissionsItem);
    return this;
  }

   /**
   * Get typePermissions
   * @return typePermissions
  **/
  @ApiModelProperty(value = "")
  public List<ItemTypePermission> getTypePermissions() {
    return typePermissions;
  }

  public void setTypePermissions(List<ItemTypePermission> typePermissions) {
    this.typePermissions = typePermissions;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RepositorySecurityContext repositorySecurityContext = (RepositorySecurityContext) o;
    return Objects.equals(this.identifierPermissions, repositorySecurityContext.identifierPermissions) &&
        Objects.equals(this.typePermissions, repositorySecurityContext.typePermissions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(identifierPermissions, typePermissions);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RepositorySecurityContext {\n");
    
    sb.append("    identifierPermissions: ").append(toIndentedString(identifierPermissions)).append("\n");
    sb.append("    typePermissions: ").append(toIndentedString(typePermissions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

