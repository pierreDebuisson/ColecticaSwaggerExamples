// Code generated by Microsoft (R) AutoRest Code Generator 1.2.2.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace ApiRestColectica
{
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for ColecticaRepositoryRESTAPI.
    /// </summary>
    public static partial class ColecticaRepositoryRESTAPIExtensions
    {
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='request'>
            /// </param>
            public static void ApiV1AgencyPost(this IColecticaRepositoryRESTAPI operations, CreateAgencyRequest request = default(CreateAgencyRequest))
            {
                operations.ApiV1AgencyPostAsync(request).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='request'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task ApiV1AgencyPostAsync(this IColecticaRepositoryRESTAPI operations, CreateAgencyRequest request = default(CreateAgencyRequest), CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.ApiV1AgencyPostWithHttpMessagesAsync(request, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='agency'>
            /// </param>
            public static void ApiV1AgencyByAgencyDelete(this IColecticaRepositoryRESTAPI operations, string agency)
            {
                operations.ApiV1AgencyByAgencyDeleteAsync(agency).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='agency'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task ApiV1AgencyByAgencyDeleteAsync(this IColecticaRepositoryRESTAPI operations, string agency, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.ApiV1AgencyByAgencyDeleteWithHttpMessagesAsync(agency, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='agency'>
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='version'>
            /// </param>
            /// <param name='request'>
            /// </param>
            public static void ApiV1ItemByAgencyByIdByVersionCommentPost(this IColecticaRepositoryRESTAPI operations, string agency, System.Guid id, long version, CreateCommentRequest request = default(CreateCommentRequest))
            {
                operations.ApiV1ItemByAgencyByIdByVersionCommentPostAsync(agency, id, version, request).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='agency'>
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='version'>
            /// </param>
            /// <param name='request'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task ApiV1ItemByAgencyByIdByVersionCommentPostAsync(this IColecticaRepositoryRESTAPI operations, string agency, System.Guid id, long version, CreateCommentRequest request = default(CreateCommentRequest), CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.ApiV1ItemByAgencyByIdByVersionCommentPostWithHttpMessagesAsync(agency, id, version, request, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='agency'>
            /// </param>
            /// <param name='id'>
            /// </param>
            public static IList<UserComment> ApiV1ItemByAgencyByIdCommentGet(this IColecticaRepositoryRESTAPI operations, string agency, System.Guid id)
            {
                return operations.ApiV1ItemByAgencyByIdCommentGetAsync(agency, id).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='agency'>
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IList<UserComment>> ApiV1ItemByAgencyByIdCommentGetAsync(this IColecticaRepositoryRESTAPI operations, string agency, System.Guid id, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ApiV1ItemByAgencyByIdCommentGetWithHttpMessagesAsync(agency, id, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='request'>
            /// </param>
            public static void ApiV1EventPost(this IColecticaRepositoryRESTAPI operations, LoggedEvent request = default(LoggedEvent))
            {
                operations.ApiV1EventPostAsync(request).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='request'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task ApiV1EventPostAsync(this IColecticaRepositoryRESTAPI operations, LoggedEvent request = default(LoggedEvent), CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.ApiV1EventPostWithHttpMessagesAsync(request, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='request'>
            /// </param>
            public static IList<RepositoryConflict> ApiV1ItemPost(this IColecticaRepositoryRESTAPI operations, RegisterItemsRequest request = default(RegisterItemsRequest))
            {
                return operations.ApiV1ItemPostAsync(request).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='request'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IList<RepositoryConflict>> ApiV1ItemPostAsync(this IColecticaRepositoryRESTAPI operations, RegisterItemsRequest request = default(RegisterItemsRequest), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ApiV1ItemPostWithHttpMessagesAsync(request, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='agency'>
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='version'>
            /// </param>
            public static RepositoryItem ApiV1ItemByAgencyByIdByVersionGet(this IColecticaRepositoryRESTAPI operations, string agency, System.Guid id, long version)
            {
                return operations.ApiV1ItemByAgencyByIdByVersionGetAsync(agency, id, version).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='agency'>
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='version'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<RepositoryItem> ApiV1ItemByAgencyByIdByVersionGetAsync(this IColecticaRepositoryRESTAPI operations, string agency, System.Guid id, long version, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ApiV1ItemByAgencyByIdByVersionGetWithHttpMessagesAsync(agency, id, version, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='agency'>
            /// </param>
            /// <param name='id'>
            /// </param>
            public static RepositoryItemMetadata ApiV1ItemByAgencyByIdGet(this IColecticaRepositoryRESTAPI operations, string agency, System.Guid id)
            {
                return operations.ApiV1ItemByAgencyByIdGetAsync(agency, id).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='agency'>
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<RepositoryItemMetadata> ApiV1ItemByAgencyByIdGetAsync(this IColecticaRepositoryRESTAPI operations, string agency, System.Guid id, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ApiV1ItemByAgencyByIdGetWithHttpMessagesAsync(agency, id, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='agency'>
            /// </param>
            /// <param name='id'>
            /// </param>
            public static IList<RepositoryItemMetadata> ApiV1ItemByAgencyByIdHistoryGet(this IColecticaRepositoryRESTAPI operations, string agency, System.Guid id)
            {
                return operations.ApiV1ItemByAgencyByIdHistoryGetAsync(agency, id).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='agency'>
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IList<RepositoryItemMetadata>> ApiV1ItemByAgencyByIdHistoryGetAsync(this IColecticaRepositoryRESTAPI operations, string agency, System.Guid id, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ApiV1ItemByAgencyByIdHistoryGetWithHttpMessagesAsync(agency, id, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='agency'>
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='version'>
            /// </param>
            public static RepositoryItemMetadata ApiV1ItemByAgencyByIdByVersionDescriptionGet(this IColecticaRepositoryRESTAPI operations, string agency, System.Guid id, long version)
            {
                return operations.ApiV1ItemByAgencyByIdByVersionDescriptionGetAsync(agency, id, version).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='agency'>
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='version'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<RepositoryItemMetadata> ApiV1ItemByAgencyByIdByVersionDescriptionGetAsync(this IColecticaRepositoryRESTAPI operations, string agency, System.Guid id, long version, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ApiV1ItemByAgencyByIdByVersionDescriptionGetWithHttpMessagesAsync(agency, id, version, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='request'>
            /// </param>
            public static void ApiV1PermissionPost(this IColecticaRepositoryRESTAPI operations, RepositorySecurityContext request = default(RepositorySecurityContext))
            {
                operations.ApiV1PermissionPostAsync(request).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='request'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task ApiV1PermissionPostAsync(this IColecticaRepositoryRESTAPI operations, RepositorySecurityContext request = default(RepositorySecurityContext), CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.ApiV1PermissionPostWithHttpMessagesAsync(request, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='agency'>
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='version'>
            /// </param>
            public static IList<UserRating> ApiV1ItemByAgencyByIdByVersionRatingGet(this IColecticaRepositoryRESTAPI operations, string agency, System.Guid id, string version)
            {
                return operations.ApiV1ItemByAgencyByIdByVersionRatingGetAsync(agency, id, version).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='agency'>
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='version'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IList<UserRating>> ApiV1ItemByAgencyByIdByVersionRatingGetAsync(this IColecticaRepositoryRESTAPI operations, string agency, System.Guid id, string version, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ApiV1ItemByAgencyByIdByVersionRatingGetWithHttpMessagesAsync(agency, id, version, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='agency'>
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='version'>
            /// </param>
            /// <param name='rating'>
            /// </param>
            public static void ApiV1ItemByAgencyByIdByVersionRatingPost(this IColecticaRepositoryRESTAPI operations, string agency, System.Guid id, long version, int? rating = default(int?))
            {
                operations.ApiV1ItemByAgencyByIdByVersionRatingPostAsync(agency, id, version, rating).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='agency'>
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='version'>
            /// </param>
            /// <param name='rating'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task ApiV1ItemByAgencyByIdByVersionRatingPostAsync(this IColecticaRepositoryRESTAPI operations, string agency, System.Guid id, long version, int? rating = default(int?), CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.ApiV1ItemByAgencyByIdByVersionRatingPostWithHttpMessagesAsync(agency, id, version, rating, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            public static RepositoryInfo ApiV1RepositoryInfoGet(this IColecticaRepositoryRESTAPI operations)
            {
                return operations.ApiV1RepositoryInfoGetAsync().GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<RepositoryInfo> ApiV1RepositoryInfoGetAsync(this IColecticaRepositoryRESTAPI operations, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ApiV1RepositoryInfoGetWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            public static RepositoryStatistics ApiV1RepositoryStatisticsGet(this IColecticaRepositoryRESTAPI operations)
            {
                return operations.ApiV1RepositoryStatisticsGetAsync().GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<RepositoryStatistics> ApiV1RepositoryStatisticsGetAsync(this IColecticaRepositoryRESTAPI operations, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ApiV1RepositoryStatisticsGetWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='agency'>
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='version'>
            /// </param>
            public static IList<IdentifierTriple> ApiV1SetByAgencyByIdByVersionGet(this IColecticaRepositoryRESTAPI operations, string agency, System.Guid id, long version)
            {
                return operations.ApiV1SetByAgencyByIdByVersionGetAsync(agency, id, version).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='agency'>
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='version'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IList<IdentifierTriple>> ApiV1SetByAgencyByIdByVersionGetAsync(this IColecticaRepositoryRESTAPI operations, string agency, System.Guid id, long version, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ApiV1SetByAgencyByIdByVersionGetWithHttpMessagesAsync(agency, id, version, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='agency'>
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='version'>
            /// </param>
            public static IList<TypedIdTriple> ApiV1SetByAgencyByIdByVersionTypedGet(this IColecticaRepositoryRESTAPI operations, string agency, System.Guid id, long version)
            {
                return operations.ApiV1SetByAgencyByIdByVersionTypedGetAsync(agency, id, version).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='agency'>
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='version'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IList<TypedIdTriple>> ApiV1SetByAgencyByIdByVersionTypedGetAsync(this IColecticaRepositoryRESTAPI operations, string agency, System.Guid id, long version, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ApiV1SetByAgencyByIdByVersionTypedGetWithHttpMessagesAsync(agency, id, version, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='setting'>
            /// </param>
            public static RepositorySetting ApiV1SettingBySettingGet(this IColecticaRepositoryRESTAPI operations, string setting)
            {
                return operations.ApiV1SettingBySettingGetAsync(setting).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='setting'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<RepositorySetting> ApiV1SettingBySettingGetAsync(this IColecticaRepositoryRESTAPI operations, string setting, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ApiV1SettingBySettingGetWithHttpMessagesAsync(setting, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='setting'>
            /// </param>
            public static void ApiV1SettingBySettingDelete(this IColecticaRepositoryRESTAPI operations, string setting)
            {
                operations.ApiV1SettingBySettingDeleteAsync(setting).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='setting'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task ApiV1SettingBySettingDeleteAsync(this IColecticaRepositoryRESTAPI operations, string setting, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.ApiV1SettingBySettingDeleteWithHttpMessagesAsync(setting, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            public static IList<RepositorySetting> ApiV1SettingGet(this IColecticaRepositoryRESTAPI operations)
            {
                return operations.ApiV1SettingGetAsync().GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IList<RepositorySetting>> ApiV1SettingGetAsync(this IColecticaRepositoryRESTAPI operations, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ApiV1SettingGetWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='request'>
            /// </param>
            public static void ApiV1SettingPost(this IColecticaRepositoryRESTAPI operations, RepositorySetting request = default(RepositorySetting))
            {
                operations.ApiV1SettingPostAsync(request).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='request'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task ApiV1SettingPostAsync(this IColecticaRepositoryRESTAPI operations, RepositorySetting request = default(RepositorySetting), CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.ApiV1SettingPostWithHttpMessagesAsync(request, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='agency'>
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='version'>
            /// </param>
            /// <param name='tag'>
            /// </param>
            public static void ApiV1ItemByAgencyByIdByVersionTagByTagPut(this IColecticaRepositoryRESTAPI operations, string agency, System.Guid id, long version, string tag)
            {
                operations.ApiV1ItemByAgencyByIdByVersionTagByTagPutAsync(agency, id, version, tag).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='agency'>
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='version'>
            /// </param>
            /// <param name='tag'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task ApiV1ItemByAgencyByIdByVersionTagByTagPutAsync(this IColecticaRepositoryRESTAPI operations, string agency, System.Guid id, long version, string tag, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.ApiV1ItemByAgencyByIdByVersionTagByTagPutWithHttpMessagesAsync(agency, id, version, tag, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='agency'>
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='version'>
            /// </param>
            /// <param name='tag'>
            /// </param>
            public static void ApiV1ItemByAgencyByIdByVersionTagByTagDelete(this IColecticaRepositoryRESTAPI operations, string agency, System.Guid id, long version, string tag)
            {
                operations.ApiV1ItemByAgencyByIdByVersionTagByTagDeleteAsync(agency, id, version, tag).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='agency'>
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='version'>
            /// </param>
            /// <param name='tag'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task ApiV1ItemByAgencyByIdByVersionTagByTagDeleteAsync(this IColecticaRepositoryRESTAPI operations, string agency, System.Guid id, long version, string tag, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.ApiV1ItemByAgencyByIdByVersionTagByTagDeleteWithHttpMessagesAsync(agency, id, version, tag, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='agency'>
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='version'>
            /// </param>
            public static IList<string> ApiV1ItemByAgencyByIdByVersionTagGet(this IColecticaRepositoryRESTAPI operations, string agency, System.Guid id, long version)
            {
                return operations.ApiV1ItemByAgencyByIdByVersionTagGetAsync(agency, id, version).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='agency'>
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='version'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IList<string>> ApiV1ItemByAgencyByIdByVersionTagGetAsync(this IColecticaRepositoryRESTAPI operations, string agency, System.Guid id, long version, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ApiV1ItemByAgencyByIdByVersionTagGetWithHttpMessagesAsync(agency, id, version, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='agency'>
            /// </param>
            /// <param name='id'>
            /// </param>
            public static IList<IdentifierTriple> ApiV1ItemByAgencyByIdVersionsGet(this IColecticaRepositoryRESTAPI operations, string agency, System.Guid id)
            {
                return operations.ApiV1ItemByAgencyByIdVersionsGetAsync(agency, id).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='agency'>
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IList<IdentifierTriple>> ApiV1ItemByAgencyByIdVersionsGetAsync(this IColecticaRepositoryRESTAPI operations, string agency, System.Guid id, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ApiV1ItemByAgencyByIdVersionsGetWithHttpMessagesAsync(agency, id, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
