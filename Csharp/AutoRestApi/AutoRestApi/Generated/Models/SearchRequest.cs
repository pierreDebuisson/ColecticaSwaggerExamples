// Code generated by Microsoft (R) AutoRest Code Generator 1.2.2.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace ApiRestColectica.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class SearchRequest
    {
        /// <summary>
        /// Initializes a new instance of the SearchRequest class.
        /// </summary>
        public SearchRequest()
        {
          CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SearchRequest class.
        /// </summary>
        /// <param name="resultOrdering">Possible values include: 'None',
        /// 'Alphabetical', 'ItemType', 'MetadataRank', 'VersionDate'</param>
        public SearchRequest(IList<string> cultures = default(IList<string>), IList<System.Guid?> itemTypes = default(IList<System.Guid?>), IList<string> languageSortOrder = default(IList<string>), int? maxResults = default(int?), bool? rankResults = default(bool?), int? resultOffset = default(int?), string resultOrdering = default(string), bool? searchDepricatedItems = default(bool?), bool? searchLatestVersion = default(bool?), System.Guid? searchSetPredicate = default(System.Guid?), IList<IdentifierInRequest> searchSets = default(IList<IdentifierInRequest>), IList<string> searchTargets = default(IList<string>), IList<string> searchTerms = default(IList<string>), bool? usePrefixSearch = default(bool?))
        {
            Cultures = cultures;
            ItemTypes = itemTypes;
            LanguageSortOrder = languageSortOrder;
            MaxResults = maxResults;
            RankResults = rankResults;
            ResultOffset = resultOffset;
            ResultOrdering = resultOrdering;
            SearchDepricatedItems = searchDepricatedItems;
            SearchLatestVersion = searchLatestVersion;
            SearchSetPredicate = searchSetPredicate;
            SearchSets = searchSets;
            SearchTargets = searchTargets;
            SearchTerms = searchTerms;
            UsePrefixSearch = usePrefixSearch;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Cultures")]
        public IList<string> Cultures { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ItemTypes")]
        public IList<System.Guid?> ItemTypes { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "LanguageSortOrder")]
        public IList<string> LanguageSortOrder { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "MaxResults")]
        public int? MaxResults { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "RankResults")]
        public bool? RankResults { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ResultOffset")]
        public int? ResultOffset { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'None', 'Alphabetical',
        /// 'ItemType', 'MetadataRank', 'VersionDate'
        /// </summary>
        [JsonProperty(PropertyName = "ResultOrdering")]
        public string ResultOrdering { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SearchDepricatedItems")]
        public bool? SearchDepricatedItems { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SearchLatestVersion")]
        public bool? SearchLatestVersion { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SearchSetPredicate")]
        public System.Guid? SearchSetPredicate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SearchSets")]
        public IList<IdentifierInRequest> SearchSets { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SearchTargets")]
        public IList<string> SearchTargets { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SearchTerms")]
        public IList<string> SearchTerms { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "UsePrefixSearch")]
        public bool? UsePrefixSearch { get; set; }

    }
}
