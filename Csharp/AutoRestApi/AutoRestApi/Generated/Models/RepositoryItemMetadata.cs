// Code generated by Microsoft (R) AutoRest Code Generator 1.2.2.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace ApiRestColectica.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class RepositoryItemMetadata
    {
        /// <summary>
        /// Initializes a new instance of the RepositoryItemMetadata class.
        /// </summary>
        public RepositoryItemMetadata()
        {
          CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the RepositoryItemMetadata class.
        /// </summary>
        public RepositoryItemMetadata(IDictionary<string, string> versionRationale = default(IDictionary<string, string>), IDictionary<string, string> summary = default(IDictionary<string, string>), IDictionary<string, string> itemName = default(IDictionary<string, string>), IDictionary<string, string> label = default(IDictionary<string, string>), IDictionary<string, string> description = default(IDictionary<string, string>), System.Guid? itemType = default(System.Guid?), string agencyId = default(string), long? version = default(long?), System.Guid? identifier = default(System.Guid?), System.DateTime? versionDate = default(System.DateTime?), string versionResponsibility = default(string), bool? isPublished = default(bool?), bool? isDeprecated = default(bool?), IList<string> tags = default(IList<string>))
        {
            VersionRationale = versionRationale;
            Summary = summary;
            ItemName = itemName;
            Label = label;
            Description = description;
            ItemType = itemType;
            AgencyId = agencyId;
            Version = version;
            Identifier = identifier;
            VersionDate = versionDate;
            VersionResponsibility = versionResponsibility;
            IsPublished = isPublished;
            IsDeprecated = isDeprecated;
            Tags = tags;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "VersionRationale")]
        public IDictionary<string, string> VersionRationale { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Summary")]
        public IDictionary<string, string> Summary { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ItemName")]
        public IDictionary<string, string> ItemName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Label")]
        public IDictionary<string, string> Label { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Description")]
        public IDictionary<string, string> Description { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ItemType")]
        public System.Guid? ItemType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "AgencyId")]
        public string AgencyId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Version")]
        public long? Version { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Identifier")]
        public System.Guid? Identifier { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "VersionDate")]
        public System.DateTime? VersionDate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "VersionResponsibility")]
        public string VersionResponsibility { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsPublished")]
        public bool? IsPublished { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsDeprecated")]
        public bool? IsDeprecated { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Tags")]
        public IList<string> Tags { get; set; }

    }
}
