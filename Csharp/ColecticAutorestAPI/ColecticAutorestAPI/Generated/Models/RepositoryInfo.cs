// Code generated by Microsoft (R) AutoRest Code Generator 1.2.2.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace ApiRestColectica.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class RepositoryInfo
    {
        /// <summary>
        /// Initializes a new instance of the RepositoryInfo class.
        /// </summary>
        public RepositoryInfo()
        {
          CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the RepositoryInfo class.
        /// </summary>
        public RepositoryInfo(DublinCore citation = default(DublinCore), IDictionary<string, string> repositories = default(IDictionary<string, string>), bool? canRead = default(bool?), bool? canAdministrator = default(bool?), bool? canWrite = default(bool?))
        {
            Citation = citation;
            Repositories = repositories;
            CanRead = canRead;
            CanAdministrator = canAdministrator;
            CanWrite = canWrite;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Citation")]
        public DublinCore Citation { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Repositories")]
        public IDictionary<string, string> Repositories { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CanRead")]
        public bool? CanRead { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CanAdministrator")]
        public bool? CanAdministrator { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CanWrite")]
        public bool? CanWrite { get; set; }

    }
}
